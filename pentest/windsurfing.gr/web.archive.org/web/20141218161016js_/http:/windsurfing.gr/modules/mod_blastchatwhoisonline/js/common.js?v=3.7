var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

<!--
/**
 * @version		$Id: common.js 2010-01-01 15:24:18Z $
 * @package		BlastChat Client
 * @author 		BlastChat
 * @copyright	Copyright (C) 2004-2010 BlastChat. All rights reserved.
 * @license		GNU/GPL, see LICENSE.php
 * @HomePage 	<http://www.blastchat.com>

 * This file is part of BlastChat Client module.

 * BlastChat Client module is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * BlastChat Client module is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with BlastChat Client module.  If not, see <http://www.gnu.org/licenses/>.
 */

document.getElementsByClassName = function (cl) {
	var retnode = [];
	var myclass = new RegExp('\\b' + cl + '\\b');
	var elem = this.getElementsByTagName('*');
	for (var i = 0; i < elem.length; i ++) {
		var classes = elem[i].className;
		if (myclass.test(classes)) {
			retnode.push(elem[i]);
		}
	}
	return retnode;
}

function blastchat_common(bc_obj, blastchat_client, bct, moduleid, countdown, countdown_type, countdown_count) {
	this.bc_obj = bc_obj;
	this.bc_refreshtime = 0;
	this.bc_iscountdown = countdown;
	this.bc_countdown = 0;
	this.bc_countdownunit = 1000;
	this.bc_countdown_type = countdown_type;
	this.bc_countdown_count = countdown_count;
	this.bc_counttimetimer = null;
	this.bc_moduleid = moduleid;
	this.bc_blastchat_client = blastchat_client;
	this.bct = bct;
	this.bc_getURL = "index.php?option="+this.bc_blastchat_client+"&bc_task=updatelist&tmpl=component&format=raw&mid=" + this.bc_moduleid;
	this.bc_refreshtime = this.bct * this.bc_countdownunit;

	if (this.bc_iscountdown > 0) {
		this.bc_countdown = this.bc_refreshtime;
		if (this.countdown_type == 1) {
			this.bc_countdownunit = parseInt(this.bc_refreshtime / this.bc_countdown_count);
		}
	}

	this.bc_call = function(bc_url) {
		var myRequest = false;
		// For browsers: Safari, Firefox, etc. use one XML model
		if (window.XMLHttpRequest) {
		    myRequest = new XMLHttpRequest();
		    if (myRequest.overrideMimeType) {
		         myRequest.overrideMimeType('text/xml');
		    }
		} else if (window.ActiveXObject) {
		    // For browsers: IE, version 6 and before, use another model
		    try {
		         myRequest = new
		              ActiveXObject("Msxml2.XMLHTTP");
		    } catch (e) {
		         try {
		              myRequest = new
		                   ActiveXObject("Microsoft.XMLHTTP");
		         } catch (e) {}
		    }
		}
		// Make sure the request object is valid
		if (!myRequest) {
		    alert('Error: Cannot create XMLHTTP object');
		    return false;
		}
		// Open the URL request
		myRequest.open('GET', bc_url, true);
		// Send request
		myRequest.send(null);
	};
	
	//initiates the XMLHttpRequest object
	function bc_getHTTPObject() {
	  var xmlhttp;
	  /*@cc_on
	  @if (@_jscript_version >= 5)
	    try {
	      xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
	    } catch (e) {
	      try {
	        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	      } catch (E) {
	        xmlhttp = false;
	      }
	    }
	  @else
	  xmlhttp = false;
	  @end @*/
	  if (!xmlhttp && typeof XMLHttpRequest != 'undefined') {
	    try {
	      xmlhttp = new XMLHttpRequest();
	    } catch (e) {
	      xmlhttp = false;
	    }
	  }
	  return xmlhttp;
	};
	
	this.bc_httpUpdater = bc_getHTTPObject();

	this.bc_directd = function(dwidth, dheight) {
		var	bc_title = "BlastChat";
		var bc_windowsrc = "index.php?option="+this.bc_blastchat_client+"&tmpl=component&isd=1&loadchat=1";
		if ( typeof( blastchatc_var ) != 'undefined' )  {
			//there is another one already loaded on this page
			bc_windowsrc = "index.php?option="+this.bc_blastchat_client+"&tmpl=component&isd=1&loadchat=1&bcerr=1";
		}
		var blastchatc_var = true;
		
		var bc_window = window.open('',bc_title,"WIDTH="+dwidth+", HEIGHT="+dheight+", location=no, menubar=no, status=no, toolbar=no, scrollbars=no, resizable=yes");
		if (bc_window && bc_window.location.href.indexOf('blastchat.com') == -1) {
			bc_window.location = bc_windowsrc;
		} else if (bc_window) {
			bc_window.focus();
		}
	};
	
	this.bc_writeit = function(text,objId) {
		//alert(text);
		if (document.layers) { //Netscape 4
			myObj = eval('document.' + objId);
			if (myObj) {
				myObj.document.open();
				myObj.document.write(text);
				myObj.document.close();
			}
		} else 	if ((document.all && !document.getElementById) || navigator.userAgent.indexOf("Opera") != -1) { //IE 4 & Opera
			myObj = eval('document.all.' + objId);
			if (myObj) {
				myObj.innerHTML = text;
			}
		} else if (document.getElementById) { //Netscape 6 & IE 5
			myObj = document.getElementById(objId);
			if (myObj) {
				myObj.innerHTML = text;
			}
		} else {
			alert('This website uses DHTML. We recommend you upgrade your browser.');
		}
	};
	
	//deals with the servers reply to requesting new content
	this.bc_handlehttpUpdater = function() {
		if (this.bc_httpUpdater.readyState == 4) {
			if (this.bc_httpUpdater.responseText.substr(0, 7) == 'allowed') {
				var newcontent = this.bc_httpUpdater.responseText.substr(7, this.bc_httpUpdater.responseText.length);
				var results = newcontent.split('|||');
				
				var gcount = parseInt(results[0]);
				var mcount = parseInt(results[1]);
				var gccount = parseInt(results[2]);
				var mccount = parseInt(results[3]);
				if (gcount > -1) {
					this.bc_writeit(gcount, "bc_module_" + this.bc_moduleid + "_guest_count");
					this.bc_writeit(gcount, "bc_module_" + this.bc_moduleid + "_guests_count");
				}
				if (mcount > -1) {
					this.bc_writeit(mcount, "bc_module_" + this.bc_moduleid + "_member_count");
					this.bc_writeit(mcount, "bc_module_" + this.bc_moduleid + "_members_count");
				}
				if (gccount > -1) {
					this.bc_writeit(gccount, "bc_module_" + this.bc_moduleid + "_chatguest_count");
					this.bc_writeit(gccount, "bc_module_" + this.bc_moduleid + "_chatguests_count");
				}
				if (mccount > -1) {
					this.bc_writeit(mccount, "bc_module_" + this.bc_moduleid + "_chatmember_count");
					this.bc_writeit(mccount, "bc_module_" + this.bc_moduleid + "_chatmembers_count");
				}
				
				if (gcount > 0 || mcount > 0) {
					document.getElementById("bc_module_" + this.bc_moduleid + "_online").style.display = "block";
					if (gcount == 0 || gcount > 1) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_guest").style.display = "none";
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_guests").style.display = "inline";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_guest").style.display = "inline";
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_guests").style.display = "none";
					}
					if (mcount == 0 || mcount > 1) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_member").style.display = "none";
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_members").style.display = "inline";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_member").style.display = "inline";
						document.getElementById("bc_module_" + this.bc_moduleid + "_online_members").style.display = "none";
					}
					if (mcount == 0) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_and").style.display = "none";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_and").style.display = "inline";
					}
				} else {
					document.getElementById("bc_module_" + this.bc_moduleid + "_online").style.display = "none";
				}
				if (gccount > 0 || mccount > 0) {
					document.getElementById("bc_module_" + this.bc_moduleid + "_chatting").style.display = "block";
					if (gccount == 0 || gccount > 1) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_guest").style.display = "none";
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_guests").style.display = "inline";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_guest").style.display = "inline";
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_guests").style.display = "none";
					}
					if (mccount == 0 || mccount > 1) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_member").style.display = "none";
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_members").style.display = "inline";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_member").style.display = "inline";
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatting_members").style.display = "none";
					}
					if (mccount == 0) {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatand").style.display = "none";
					} else {
						document.getElementById("bc_module_" + this.bc_moduleid + "_chatand").style.display = "inline";
					}
				} else {
					document.getElementById("bc_module_" + this.bc_moduleid + "_chatting").style.display = "none";
				}
				this.bc_writeit(decodeURI(results[4]),"bc_module_" + this.bc_moduleid + "_names");
				//bc_writeit(results[4],'bc_module_' + this.bc_moduleid);
				
				var tt = document.getElementsByClassName("tool-tip");
				for (var i = 0; i < tt.length; i ++) {
					if (tt[i] && tt[i].parentNode && tt[i].parentNode.removeChild) {
						tt[i].parentNode.removeChild(tt[i]);
					}
				}
				JTooltips = null;
				JTooltips = new Tips($$('.hasTip'), { maxTitleChars: 50, fixed: false});
			}
		}
	};
	
	//initiates the first data query
	this.bc_updateList = function() {
		var bc_obj = this;
		clearTimeout(this.bc_counttimetimer);
		if (this.bc_httpUpdater.readyState == 4 || this.bc_httpUpdater.readyState == 0) {
			var t = new Date();
			this.bc_httpUpdater.open("GET", this.bc_getURL + "&t=" + t.getTime(), true);
			this.bc_httpUpdater.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
			this.bc_httpUpdater.onreadystatechange = function() {
				bc_obj.bc_handlehttpUpdater();
			};
			this.bc_httpUpdater.send('');
			
			if (this.bc_iscountdown > 0) {
				this.bc_countdown = this.bc_refreshtime;
				//this.bc_runcountdown();
				clearTimeout(this.bc_counttimetimer);
				this.bc_counttimetimer = setTimeout(this.bc_obj+".bc_runcountdown()", this.bc_countdownunit);
			} else {
				clearTimeout(this.bc_counttimetimer);
				this.bc_counttimetimer = setTimeout(this.bc_obj+".bc_updateList()", this.bc_refreshtime);
			}
		}
	};
	
	this.bc_runcountdown = function() {
		if (this.bc_countdown < 0) {
			this.bc_countdown = 0;
		}
			if (this.bc_countdown_type == 0) {
				//show number
				var shownumber = this.bc_countdown / 1000;
				if (shownumber <= 0) {
					this.bc_writeit(String(shownumber), "bc_module_" + this.bc_moduleid + "_countdown_present");
					this.bc_countdown = this.bc_refreshtime;
					this.bc_updateList();
				} else {
					this.bc_writeit(String(shownumber), "bc_module_" + this.bc_moduleid + "_countdown_present");
					this.bc_countdown = this.bc_countdown - this.bc_countdownunit;
					clearTimeout(this.bc_counttimetimer);
					this.bc_counttimetimer = setTimeout(this.bc_obj+".bc_runcountdown()", this.bc_countdownunit);
				}
			} else {
				var unit = parseInt(this.bc_refreshtime / this.bc_countdown_count);
				var now = this.bc_refreshtime - this.bc_countdown;
				var howmany = parseInt(now / unit) + 1;
				var image = '<div class="bc_module_countdown_image bc_module_countdown_image' + howmany + '"></div>';
				try {
					this.bc_writeit(String(image), "bc_module_" + this.bc_moduleid + "_countdown_present");
				} catch (e) {
				}
				if (howmany == this.bc_countdown_count) {	
					this.bc_countdown = this.bc_refreshtime;
					this.bc_updateList();
				} else {
					this.bc_countdown = this.bc_countdown - this.bc_countdownunit;
					clearTimeout(this.bc_counttimetimer);
					this.bc_counttimetimer = setTimeout(this.bc_obj+".bc_runcountdown()", this.bc_countdownunit);
				}
			}
	};

	if (this.bct > 0) {
		clearTimeout(this.bc_counttimetimer);
		if (this.bc_iscountdown > 0) {
			this.bc_runcountdown();
		} else {
			this.bc_counttimetimer = setTimeout(this.bc_obj+".bc_updateList()", this.bc_refreshtime);
		}
	}
}
//-->

}
/*
     FILE ARCHIVED ON 08:04:24 Dec 29, 2014 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 14:24:27 Jul 01, 2023.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 294.439
  exclusion.robots: 0.078
  exclusion.robots.policy: 0.068
  RedisCDXSource: 25.688
  esindex: 0.01
  LoadShardBlock: 246.837 (3)
  PetaboxLoader3.datanode: 282.454 (4)
  load_resource: 304.002
  PetaboxLoader3.resolve: 179.179
*/